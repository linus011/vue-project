.textarea {
  position: relative;
  border: 0.1rem solid #fafafa;
  border-radius: 1rem;
  min-height: 4.8rem;
  background: #fafafa;
  &.line {
    border-color: var(--line-color);
    background-color: #fff;
  }
  &.focus {
    border-color: var(--primary-color);
  }
  textarea {
    border-radius: 1rem;
    display: block;
    border: 0 none;
    outline: none;
    padding: 1.1rem 1.6rem;
    min-height: 4.6rem;
    resize: none;
    line-height: 2.2rem;
    font-size: 1.6rem;
    font-weight: 500;
    color: var(--strong-txt-color);
    background: transparent;
    &:not(:last-child) {
      padding-right: 0.8rem;
    }
  }
  > *:not(textarea):last-child {
    margin-right: 1.6rem;
  }
  &.disabled textarea,
  textarea:disabled {
    opacity: 0.4;
  }
  &.readonly input,
  input[readonly] {
    color: var(--base-txt-color);
  }
  .btn-inp-del {
    position: absolute;
    top: 1.5rem;
    right: 1.2rem;
  }
  &.auto-height {
    textarea {
      // box-sizing: content-box;
      min-height: auto;
      line-height: 2.4rem;
      overflow: hidden;
    }
    &.add-btn {
      textarea {
        padding-right: 6rem;
        max-height: 14.2rem;
        @include scroll-y;
      }
      .button {
        position: absolute;
        bottom: 0.7rem;
        right: 0rem;
        width: 4.5rem;
        margin-right: 0.8rem;
      }

      &.focus {
        .button {
          background: var(--primary-color);
        }
      }
    }
  }
  &:not(.form-box) {
    & + :is(.flex, .input, .select, .textarea) {
      margin-top: var(--item-margin-y);
    }
  }
  .textarea-count {
    font-size: 1.2rem;
    line-height: 1.8rem;
    position: absolute;
    right: 1.2rem;
    bottom: 1.2rem;
  }
  &.in-count {
    padding-bottom: 3rem;
    textarea {
      padding-bottom: 0;
    }
  }
  &.is-error {
    // border-color: var(--alert-txt-color);
    textarea:not(:focus) {
      color: var(--alert-txt-color);
    }
  }
}
